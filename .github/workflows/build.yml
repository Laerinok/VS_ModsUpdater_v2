name: Build Application

on:
  push:
    branches: [ "dev", "main" ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build_windows:
    name: Build Executable (Windows)
    runs-on: windows-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tools and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cx-freeze setuptools
          pip install -r requirements.txt

      - name: Build the executable
        run: python setup.py build_exe

      - name: Archive executable
        run: powershell Compress-Archive -Path build/exe.win-amd64-3.12 -DestinationPath VS_ModsUpdater-${{ github.ref_name }}-Windows.zip

      - name: Upload Windows executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: VS_ModsUpdater-${{ github.ref_name }}-Windows-zip
          path: VS_ModsUpdater-${{ github.ref_name }}-Windows.zip

  build_linux:
    name: Build AppImage (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tools and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cx-freeze setuptools
          pip install -r requirements.txt

      - name: Install Linux dependencies for AppImage
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot

      - name: Build AppImage
        run: python setup.py bdist_appimage

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: VS_ModsUpdater-${{ github.ref_name }}-Linux
          path: dist/*.AppImage

  build_macos:
    name: Build DMG (macOS)
    runs-on: macos-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tools and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cx-freeze setuptools dmgbuild
          pip install -r requirements.txt

      - name: Build the .app bundle
        run: python setup.py bdist_mac

      - name: Create compressed DMG
        run: dmgbuild -s dmg_settings.py "VS_ModsUpdater" dist/VS_ModsUpdater-${{ github.ref_name }}.dmg

      - name: Upload macOS DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: VS_ModsUpdater-${{ github.ref_name }}-macOS
          path: dist/*.dmg
